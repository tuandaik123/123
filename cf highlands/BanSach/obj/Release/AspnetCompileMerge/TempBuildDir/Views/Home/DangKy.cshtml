@model BanSach.Models.KhachHang
<link href="~/Content/DangKy.css" rel="stylesheet" />
@{
    ViewBag.Title = "DangKy";
    Layout = null;
}
<div>
    <h2 class="page-title" style="color:bisque">Đăng Ký</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal custom-form">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            Họ Tên
            <div class="form-group">

                <div class="col-md-10" style="padding: 0.5rem; position: relative; width: 100%; height: 10px; border-bottom: 2px solid #162938;">
                    @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control custom-input" } })
                    @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TaiKhoan, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="padding: 0.5rem; position: relative; width: 100%; height: 10px; border-bottom: 2px solid #162938;">
                    @Html.EditorFor(model => model.TaiKhoan, new { htmlAttributes = new { @class = "form-control custom-input" } })
                    @Html.ValidationMessageFor(model => model.TaiKhoan, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MatKhau, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="padding: 0.5rem; position: relative; width: 100%; height: 10px; border-bottom: 2px solid #162938;">
                    @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control custom-input", type = "password" } })
                    @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NhapLaiMatKhau, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="padding: 0.5rem; position: relative; width: 100%; height: 10px; border-bottom: 2px solid #162938;">
                    @Html.EditorFor(model => model.NhapLaiMatKhau, new { htmlAttributes = new { @class = "form-control custom-input", type = "password" } })
                    @Html.ValidationMessageFor(model => model.NhapLaiMatKhau, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="padding: 0.5rem; position: relative; width: 100%; height: 10px; border-bottom: 2px solid #162938;">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control custom-input" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-2 custom-input" })
                <div class="col-md-10" style="padding: 0.5rem; position: relative; width: 100%; height: 10px; border-bottom: 2px solid #162938;">
                    @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control custom-input" } })
                    @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DienThoai, htmlAttributes: new { @class = "control-label col-md-2 custom-input" })
                <div class="col-md-10" style="padding: 0.5rem; position: relative; width: 100%; height: 10px; border-bottom: 2px solid #162938;">
                    @Html.EditorFor(model => model.DienThoai, new { htmlAttributes = new { @class = "form-control custom-input" } })
                    @Html.ValidationMessageFor(model => model.DienThoai, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GioiTinh, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="padding: 0.5rem; position: relative; width: 100%; height: 10px; border-bottom: 2px solid #162938;">
                    @Html.EditorFor(model => model.GioiTinh, new { htmlAttributes = new { @class = "form-control custom-input" } })
                    @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NgaySinh, htmlAttributes: new { @class = "control-label col-md-2 custom-input" })
                <div class="col-md-10" style="padding:0.5rem;">
                    @Html.TextBoxFor(model => model.NgaySinh, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" style="padding-top:10px;">
                    <input type="submit" id="DangKyButton" style="width:100%;height:45px;background:#162938;border:none;outline:none;border-radius:6px;font-size:16pt;color:#fff;font-weight:500;cursor: pointer;" value="Đăng ký" class="btn btn-primary custom-button" />
                </div>

            </div>
        </div>
        

    }
</div>

<script>
    document.querySelector("#DangKyButton").addEventListener("click", function (e) {
        
        // Kiểm tra lỗi
        if (validateForm()) {
                // Nếu không có lỗi, cho phép gửi dữ liệu
                alert("Đăng ký thành công!");
            }
            
         else {
            // Nếu có lỗi, ngăn gửi dữ liệu và hiển thị thông báo
            e.preventDefault();
            alert("Vui lòng điền đầy đủ thông tin bắt buộc.");
        }
    });

    // Hàm kiểm tra lỗi
    function validateForm() {
        var hoTen = document.querySelector("#HoTen").value;
        var taiKhoan = document.querySelector("#TaiKhoan").value;
        var matKhau = document.querySelector("#MatKhau").value;
        var email = document.querySelector("#Email").value;
        var diaChi = document.querySelector("#DiaChi").value;
        var dienThoai = document.querySelector("#DienThoai").value;
        var ngaySinh = document.querySelector("#NgaySinh").value;
        var matKhauNhapLai = document.querySelector("#NhapLaiMatKhau").value;
        

        if (hoTen === "" || taiKhoan === "" || matKhau === "" || email === "" || diaChi === "" || dienThoai === "" || ngaySinh === "" || matKhauNhapLai === "") {
            return false;
        } else {
            return true;
        }
    }

    


        
        // Hiển thị thông báo "Đặt hàng thành công"
        

        // Tại đây, bạn có thể thực hiện các xử lý đặt hàng thực tế
        // Ví dụ: Gửi dữ liệu đặt hàng lên máy chủ và nhận phản hồi từ máy chủ (sử dụng Ajax hoặc gửi form thông thường).

        // Sau khi đặt hàng thành công, bạn có thể chuyển người dùng đến trang cảm ơn hoặc trang khác nếu cần.
  

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
